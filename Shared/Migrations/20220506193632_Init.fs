// <auto-generated />
namespace Shared.Migrations

open System
open Shared.Data
open Microsoft.EntityFrameworkCore
open Microsoft.EntityFrameworkCore.Infrastructure
open Microsoft.EntityFrameworkCore.Metadata
open Microsoft.EntityFrameworkCore.Migrations
open Microsoft.EntityFrameworkCore.Storage.ValueConversion
open Npgsql.EntityFrameworkCore.PostgreSQL.Metadata

[<DbContext(typeof<AppDbContext>)>]
[<Migration("20220506193632_Init")>]
type Init() =
    inherit Migration()

    override this.Up(migrationBuilder:MigrationBuilder) =
        migrationBuilder.CreateTable(
            name = "Users"
            ,columns = (fun table ->
            {|
                Id =
                    table.Column<Int64>(
                        nullable = false
                        ,``type`` = "bigint"
                    ).Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                SpotifyId =
                    table.Column<string>(
                        nullable = false
                        ,``type`` = "text"
                    )
            |})
            , constraints =
                (fun table ->
                    table.PrimaryKey("PK_Users", (fun x -> (x.Id) :> obj)
                    ) |> ignore
                )
        ) |> ignore

        migrationBuilder.CreateTable(
            name = "Playlists"
            ,columns = (fun table ->
            {|
                Id =
                    table.Column<int>(
                        nullable = false
                        ,``type`` = "integer"
                    ).Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                PlaylistType =
                    table.Column<int>(
                        nullable = false
                        ,``type`` = "integer"
                    )
                Url =
                    table.Column<string>(
                        nullable = false
                        ,``type`` = "text"
                    )
                UserId =
                    table.Column<Int64>(
                        nullable = false
                        ,``type`` = "bigint"
                    )
            |})
            , constraints =
                (fun table ->
                    table.PrimaryKey("PK_Playlists", (fun x -> (x.Id) :> obj)
                    ) |> ignore
                    table.ForeignKey(
                        name = "FK_Playlists_Users_UserId"
                        ,column = (fun x -> (x.UserId) :> obj)
                        ,principalTable = "Users"
                        ,principalColumn = "Id"
                        ,onDelete = ReferentialAction.Cascade
                        ) |> ignore

                )
        ) |> ignore

        migrationBuilder.CreateIndex(
            name = "IX_Playlists_UserId"
            ,table = "Playlists"
            ,column = "UserId"
            ) |> ignore


    override this.Down(migrationBuilder:MigrationBuilder) =
        migrationBuilder.DropTable(
            name = "Playlists"
            ) |> ignore

        migrationBuilder.DropTable(
            name = "Users"
            ) |> ignore


    override this.BuildTargetModel(modelBuilder: ModelBuilder) =
        modelBuilder
            .HasAnnotation("ProductVersion", "6.0.4")
            .HasAnnotation("Relational:MaxIdentifierLength", 63) |> ignore

        modelBuilder.Entity("Bot.Data.Playlist", (fun b ->

            b.Property<int>("Id")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("integer")
                |> ignore

            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id")) |> ignore

            b.Property<int>("PlaylistType")
                .IsRequired(true)
                .HasColumnType("integer")
                |> ignore

            b.Property<string>("Url")
                .IsRequired(true)
                .HasColumnType("text")
                |> ignore

            b.Property<Int64>("UserId")
                .IsRequired(true)
                .HasColumnType("bigint")
                |> ignore

            b.HasKey("Id")
                |> ignore


            b.HasIndex("UserId")
                |> ignore

            b.ToTable("Playlists") |> ignore

        )) |> ignore

        modelBuilder.Entity("Bot.Data.User", (fun b ->

            b.Property<Int64>("Id")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("bigint")
                |> ignore

            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<Int64>("Id")) |> ignore

            b.Property<string>("SpotifyId")
                .IsRequired(true)
                .HasColumnType("text")
                |> ignore

            b.HasKey("Id")
                |> ignore


            b.ToTable("Users") |> ignore

        )) |> ignore
        modelBuilder.Entity("Bot.Data.Playlist", (fun b ->
            b.HasOne("Bot.Data.User", "User")
                .WithMany("Playlists")
                .HasForeignKey("UserId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired()
                |> ignore

        )) |> ignore
        modelBuilder.Entity("Bot.Data.User", (fun b ->

            b.Navigation("Playlists")
            |> ignore
        )) |> ignore

