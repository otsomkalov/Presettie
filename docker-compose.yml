version: '3.1'

services:
  spotify-playlist-generator-telegram-bot:
    container_name: spotify-playlist-generator-telegram-bot
    image: spotify-playlist-generator-telegram-bot:latest
    restart: always
    build:
      context: .
      dockerfile: ./Bot/Dockerfile
    depends_on:
      - telegram-bot-api
      - spotify-playlist-generator-database
    ports:
      - "65400:80"
    environment:
      Telegram:Token:
      Telegram:ApiUrl:
      Spotify:ClientId:
      Spotify:ClientSecret:
      ApplicationInsights:InstrumentationKey:
      AWS_ACCESS_KEY_ID:
      AWS_SECRET_ACCESS_KEY:
      Amazon:QueueUrl:
  spotify-playlist-generator-worker:
    container_name: spotify-playlist-generator-worker
    image: spotify-playlist-generator-worker:latest
    restart: always
    build:
      context: .
      dockerfile: ./Generator/Dockerfile
    depends_on:
      - telegram-bot-api
      - spotify-playlist-generator-database
    environment:
      Telegram:Token:
      Telegram:ApiUrl:
      Spotify:ClientId:
      Spotify:ClientSecret:
      ApplicationInsights:InstrumentationKey:
      AWS_ACCESS_KEY_ID:
      AWS_SECRET_ACCESS_KEY:
      Amazon:QueueUrl:
  spotify-playlist-generator-database:
    container_name: spotify-playlist-generator-database
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER:
      POSTGRES_PASSWORD:
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5435:5432"
    volumes:
      - /pg/spotify-playlist-generator:/var/lib/postgresql/data
  telegram-bot-api:
    image: aiogram/telegram-bot-api:latest
    ports:
      - "65500:8081"
    volumes:
      - /telegram-bot-api-data:/var/lib/telegram-bot-api
    environment:
      TELEGRAM_API_ID:
      TELEGRAM_API_HASH:
      TELEGRAM_LOCAL: 'true'