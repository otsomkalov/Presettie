trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  Runtime: 'linux-x64'

steps:
  - task: UseDotNet@2
    inputs:
      version: '8.x'
  - task: DotNetCoreCLI@2
    name: Restore
    inputs:
      command: 'restore'
      projects: 'src/**/Generator.fsproj'
      arguments: '-r $(Runtime)'
  - task: DotNetCoreCLI@2
    name: Build Bot
    inputs:
      command: 'build'
      configuration: 'Release'
      projects: 'src/**/Generator.fsproj'
      arguments: '-r $(Runtime) -c Release'
      publishWebProjects: false
  - task: DotNetCoreCLI@2
    name: Build API
    inputs:
      command: 'build'
      configuration: 'Release'
      projects: 'src/**/API.fsproj'
      arguments: '-r $(Runtime) -c Release'
      publishWebProjects: false
  - task: DotNetCoreCLI@2
    name: Publish Bot
    inputs:
      command: 'publish'
      configuration: 'Release'
      projects: 'src/**/Generator.fsproj'
      arguments: '-r $(Runtime) -o $(Build.ArtifactStagingDirectory) /p:InformationalVersion=$(Build.BuildNumber)'
      publishWebProjects: false
  - task: PublishBuildArtifacts@1
    name: Pack
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'